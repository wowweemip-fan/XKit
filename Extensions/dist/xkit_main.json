{"id":"xkit_main","script":"//* TITLE XKit Main **//\n//* VERSION 2.0.0 **//\n//* DESCRIPTION Boots XKit up **//\n//* DEVELOPER New-XKit **//\n(function() {\n\tif (typeof XKit.extensions.xkit_main !== \"undefined\") { return; }\n\tXKit.extensions.xkit_main = new Object({\n\n\t\trunning: false,\n\t\tenabled_extensions: [\"xkit_main\"],\n\t\tdisabled_extensions: [],\n\n\t\trun: function() {\n\n\t\t\tif (typeof document.location.href !== \"undefined\") {\n\t\t\t\tif (document.location.href.indexOf(\"://www.tumblr.com/login\") !== -1 || document.location.href.indexOf(\"://www.tumblr.com/settings\") !== -1) {\n\t\t\t\t\tconsole.log(\"Refusing to run XKit, login or settings page!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (XKit.extensions.xkit_main.running === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.running = true;\n\n\t\t\tconsole.log(\"Welcome from XKit Main \" + XKit.installed.version('xkit_main'));\n\n\t\t\tvar installed = XKit.installed.list();\n\n\t\t\tfor (var x in installed) {\n\t\t\t\tvar extension = XKit.installed.get(installed[x]);\n\n\t\t\t\tif (extension.id === \"xkit_main\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (extension.id === \"xkit_patches\") {\n\t\t\t\t\tif (XKit.flags.do_not_load_xkit_patches) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (XKit.frame_mode) {\n\t\t\t\t\t\textension.frame = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\teval(extension.script + \"\\n//# sourceURL=xkit/\" + extension.id + \".js\");\n\n\t\t\t\t\tif (typeof XKit.extensions[extension.id].preferences !== \"undefined\") {\n\t\t\t\t\t\tthis.load_extension_preferences(extension.id);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (XKit.installed.enabled(extension.id)) {\n\n\t\t\t\t\t\tif (XKit.frame_mode) {\n\t\t\t\t\t\t\tif (extension.frame) {\n\t\t\t\t\t\t\t\tXKit.extensions[extension.id].run();\n\t\t\t\t\t\t\t} else if (typeof XKit.extensions[extension.id].frame_run !== \"undefined\") {\n\t\t\t\t\t\t\t\tXKit.extensions[extension.id].frame_run();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.disabled_extensions.push(extension.id + \" (in frame)\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!extension.frame) {\n\t\t\t\t\t\t\tXKit.extensions[extension.id].run();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.disabled_extensions.push(extension.id + \" (not in frame)\");\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.disabled_extensions.push(extension.id);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tvar fatal = false;\n\n\t\t\t\t\tconsole.error(\"[XKit Main] Could not run \" + extension.id + \": \" + e.message);\n\t\t\t\t\tthis.disabled_extensions.push(extension.id + \" (error)\");\n\n\t\t\t\t\tswitch (extension.id) {\n\t\t\t\t\tcase \"xkit_patches\":\n\t\t\t\t\tcase \"xkit_preferences\":\n\t\t\t\t\tcase \"xkit_updates\":\n\t\t\t\t\t\t// defined in xkit.js\n\t\t\t\t\t\t/* globals show_error_reset */\n\t\t\t\t\t\tshow_error_reset(\"Can't run \" + extension.id + \": \" + e.message);\n\t\t\t\t\t\tfatal = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fatal) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.enabled_extensions.push(extension.id);\n\t\t\t}\n\n\t\t\tXKit.post_listener.check();\n\t\t\tconsole.log(\"Enabled extensions: \" + this.enabled_extensions.join(\", \"));\n\t\t\tconsole.log(\"Disabled extensions: \" + this.disabled_extensions.join(\", \"));\n\t\t},\n\n\t\tload_extension_preferences: function(extension_id) {\n\n\t\t\tfor (var pref in XKit.extensions[extension_id].preferences) {\n\n\t\t\t\tif (XKit.extensions[extension_id].preferences[pref].type !== \"separator\") {\n\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.storage.get(extension_id, \"extension__setting__\" + pref, XKit.extensions[extension_id].preferences[pref].default);\n\t\t\t\t}\n\n\t\t\t\tswitch (XKit.extensions[extension_id].preferences[pref].type) {\n\t\t\t\tcase \"text\":\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"blog\":\n\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].value.substring(1, XKit.extensions[extension_id].preferences[pref].value.length - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase undefined:\n\t\t\t\tcase \"checkbox\":\n\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].value !== \"boolean\") {\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].value === \"true\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tthis.running = false;\n\t\t}\n\n\t});\n}());\n","file":"found","server":"up","errors":false,"title":"XKit Main","description":"Boots XKit up","developer":"New-XKit","version":"2.0.0","frame":"false","beta":"false","slow":"false"}